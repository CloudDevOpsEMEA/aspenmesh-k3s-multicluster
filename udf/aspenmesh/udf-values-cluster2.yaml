aspen-mesh-controlplane:
  # The name of the cluster where Aspen Mesh is being installed.
  clusterId: cluster2

  userAuth:
    # type can be set to `jwt` or `none`. JWT authentication is highly recommended.
    type: none
  
aspen-mesh-secure-ingress:
  # enabled by default, which is highly recommended.
  enabled: true
  # Email to use for Let's Encrypt registration (used for certificate expiry notices)
  # Leave blank ("") if you wish to manage your own TLS certificates.
  lets-encrypt-email: ""
  # Enable external-dns management for Secure Ingress resources
  externalDnsEnabled: false

aspen-mesh-event-storage:
  persistence:
    size: 2Gi
  config:
    cluster_size: 1
    seed_size: 1

aspen-mesh-metrics-collector:
  server:
    persistentVolume:
      size: 2Gi

gateways:
  istio-ingressgateway:
    autoscaleMin: 1
    autoscaleMax: 3
    enabled: true
    type: ClusterIP

  istio-egressgateway:
    autoscaleMin: 1
    autoscaleMax: 3
    enabled: true
    env:
      # Needed to route traffic via egress gateway if desired.
      ISTIO_META_REQUESTED_NETWORK_VIEW: "external"

prometheus:
  enabled: true

jaeger:
  enabled: true
  cassandra:
    persistence:
      size: 2Gi
    config:
      cluster_size: 1
  ingester:
    autoscaling:
      minReplicas: 1
      maxReplicas: 3
  collector:
    autoscaling:
      minReplicas: 1
      maxReplicas: 3

cassandra:
  enabled: true
  fullnameOverride: aspen-mesh-cassandra
  persistence:
    size: 2Gi
  config:
    cluster_size: 1
    seed_size: 1

external-dns:
  # enabled by default
  enabled: false

global:
  # Provides dns resolution for global services
  podDNSSearchNamespaces:
    - aspendemo.org

  multiCluster:
    enabled: true
    globalDomainSuffix: "aspendemo.org"
    includeEnvoyFilter: true

  controlPlaneSecurityEnabled: true

  proxy:
    clusterDomain: "cluster2.local"

  trustDomain: "cluster2.local"

# Enable istiocoredns for multicluster routing
istiocoredns:
  enabled: true
